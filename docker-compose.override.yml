version: '3.3'
services:
  web:
#    environment:
#      - PYTHONDEVMODE=1
    volumes:
      - ./fiesta/:/usr/src/app/
      - ./conf/certs:/usr/share/certs
      - web_static_files:/usr/src/static
      - web_media_files:/usr/src/media
      - webpack_build:/usr/src/build
    build:
      args:
        - POETRY_EXPORT_ARGS=--dev

  proxy:
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - web_static_files:/var/static
      - webpack_build:/var/build

  webpack:
    environment:
      PUBLIC_PATH: //webpack.${ROOT_DOMAIN}/static/
      NODE_ENV: development
    volumes:
      - ./webpack/:/usr/src/app
      # since tailwind need to access templates and all the stuff to dynamically strip classes
      # see more in webpack/tailwind.config.js
      - ./fiesta/:/usr/src/fiesta
      - webpack_build:/usr/src/build

  dockerproxy:
    environment:
      - DISABLE_ACCESS_LOGS=1
    volumes:
      - ./conf/certs:/etc/nginx/certs

  legacydb:
    volumes:
      - ./legacy.sql:/docker-entrypoint-initdb.d/legacy.sql

  elastic:
    volumes:
      - ./elastic/elastic.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./conf/elastic/elasticsearch.keystore:/usr/share/elasticsearch/config/elasticsearch.keystore
      - ./conf/certs:/usr/share/elasticsearch/config/certs

  kibana:
    volumes:
      - ./elastic/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./conf/certs:/etc/kibana/certs

  wikifetcher:
    volumes:
      - ./wiki/:/usr/src/app/
      - ./conf/certs:/usr/share/certs
