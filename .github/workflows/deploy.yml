name: Deploy to cluster

on:
  - push

jobs:
  build-webpack:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

  build-images:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - name: Prepare image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            webpack
          tags: |
            latest

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: webpack/Dockerfile
#          TODO: ends with 400
#          cache-from: type=registry,ref=${{ secrets.SCW_REGISTRY_ENDPOINT }}/web:buildcache
#          cache-to: type=registry,ref=${{ secrets.SCW_REGISTRY_ENDPOINT }}/web:buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract compiled results
        run: |
          docker cp $(docker create --name webpack webpack:latest):/usr/src/build/ ./build
          docker rm webpack

      - uses: actions/upload-artifact@v2
        name: Save compiled results
        with:
          name: webpack-build
          path: ./build


  deploy:
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - uses: actions/checkout@v1

#      - name: Set Kubernetes Context
#        uses: azure/k8s-set-context@v1
#        with:
#          method: kubeconfig
#          kubeconfig: "${{ secrets.KUBECONFIG }}"
      - name: Setup k8s context
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

      - name: Prepare image reference
        run: echo "image_tag=sha-`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Deploy
        uses: 'vimeda/helm@v1.7.0'
        with:
          release: 'fiesta'
          namespace: 'fiesta'
          chart: 'charts'
          token: '${{ github.token }}'
          timeout: 60s
          values: |
            image:
              repository: ${{ secrets.SCW_REGISTRY_ENDPOINT }}/web
              tag: ${{ env.image_tag }}
          value-files: >-
            [
              "charts/values.yaml"
            ]
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
