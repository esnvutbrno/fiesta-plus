apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    {{- include "fiesta.labels" . | nindent 4 }}
    {{- include "fiesta.componentLabels" "web" | nindent 4 }}
spec:
  replicas: 3
  selector:
    matchLabels:
      {{- include "fiesta.selectorLabels" . | nindent 6 }}
      {{- include "fiesta.componentLabels" "web" | nindent 6 }}
  template:
    metadata:
      labels:
        app: web
        {{- include "fiesta.selectorLabels" . | nindent 8 }}
        {{- include "fiesta.componentLabels" "web" | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-logs-container: web
    spec:
      {{/* TODO: temp solution for DNS resolve for S3 bucket */}}
      hostAliases:
        - ip: "151.115.10.1"
          hostnames:
            - "s3.pl-waw.scw.cloud"
      containers:
        - name: web
          image: "{{ .Values.web.repository }}:{{ .Values.web.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: {{ .Values.web.port }}
              protocol: TCP
              name: web
{{/*          readinessProbe:*/}}
{{/*            initialDelaySeconds: 5*/}}
{{/*            */}}{{/* httpget doesn't work, timeouted */}}
{{/*            exec:*/}}
{{/*              command:*/}}
{{/*                - wget*/}}
{{/*                - 'http://localhost:{{ .Values.web.port }}/!/web'*/}}
{{/*                - --header*/}}
{{/*                - 'Host: {{ .Values.ingress.host | quote }}'*/}}
{{/*          livenessProbe:*/}}
{{/*            initialDelaySeconds: 5*/}}
{{/*            periodSeconds: 20*/}}
{{/*            exec:*/}}
{{/*              command:*/}}
{{/*                - wget*/}}
{{/*                - 'http://localhost:{{ .Values.web.port }}/!/web'*/}}
{{/*                - --header*/}}
{{/*                - 'Host: {{ .Values.ingress.host | quote }}'*/}}
          envFrom:
            - secretRef:
                name: {{ .Values.web.secretName }}
            - configMapRef:
                name: {{ .Values.web.configName }}
        - name: proxy
          image: "{{ .Values.proxy.repository }}:{{ .Values.proxy.tag | default .Chart.AppVersion }}"
          readinessProbe:
            initialDelaySeconds: 3
            httpGet:
              path: "/!/proxy"
              port: proxy
              httpHeaders:
                - name: Host
                  value: {{ .Values.ingress.host | quote }}
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 20
            httpGet:
              path: "/!/proxy"
              port: proxy
              httpHeaders:
                - name: Host
                  value: {{ .Values.ingress.host | quote }}
          ports:
            - name: proxy
              protocol: TCP
              containerPort: {{ .Values.proxy.port }}
